{
  "_args": [
    [
      {
        "raw": "noisejs@^2.1.0",
        "scope": null,
        "escapedName": "noisejs",
        "name": "noisejs",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/jackwild/Repos/Uni/daria-final-show"
    ]
  ],
  "_from": "noisejs@>=2.1.0 <3.0.0",
  "_id": "noisejs@2.1.0",
  "_inCache": true,
  "_location": "/noisejs",
  "_npmUser": {
    "name": "xixixao",
    "email": "xixixao@seznam.cz"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "noisejs@^2.1.0",
    "scope": null,
    "escapedName": "noisejs",
    "name": "noisejs",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/noisejs/-/noisejs-2.1.0.tgz",
  "_shasum": "84b4c4cd04ff43367034f65253e213e0d9fe1aff",
  "_shrinkwrap": null,
  "_spec": "noisejs@^2.1.0",
  "_where": "/Users/jackwild/Repos/Uni/daria-final-show",
  "author": {
    "name": "Joseph Gentle"
  },
  "bugs": {
    "url": "https://github.com/josephg/noisejs/issues"
  },
  "dependencies": {},
  "description": "Perlin noise implementation",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "84b4c4cd04ff43367034f65253e213e0d9fe1aff",
    "tarball": "https://registry.npmjs.org/noisejs/-/noisejs-2.1.0.tgz"
  },
  "homepage": "https://github.com/xixixao/noisejs#readme",
  "keywords": [
    "perlin",
    "noise",
    "simplex"
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "xixixao",
      "email": "xixixao@seznam.cz"
    }
  ],
  "name": "noisejs",
  "optionalDependencies": {},
  "readme": "# NOISE!\n\nThis is a simple library for 2d & 3d perlin noise and simplex noise in javascript. Noise is [pretty](https://dl.dropbox.com/u/2494815/perlin/index.html).\n\nThe library is pretty fast (10M queries / sec). But its still way slower than using a shader. For example, if you try and update an entire screen's worth of pixels, it'll be [slow](http://josephg.github.com/noisejs/demo3d.html).\n\nThe code is based on Stefan Gustavson's implementation. Do whatever you want with it, etc.\n\n## How to make noise:\n\n```javascript\n// value passed into the constructor is used as a seed\nvar noise = new Noise(Math.random());\n\nfor (var x = 0; x < canvas.width; x++) {\n  for (var y = 0; y < canvas.height; y++) {\n    // noise.simplex2 and noise.perlin2 return values between -1 and 1.\n    var value = noise.simplex2(x / 100, y / 100);\n\n    image[x][y].r = Math.abs(value) * 256; // Or whatever. Open demo.html to see it used with canvas.\n  }\n}\n```\n\nThe library exposes a constructor function called `Noise` with the following instance methods:\n\n- **simplex2(x, y)**: 2D Simplex noise function\n- **simplex3(x, y, z)**: 3D Simplex noise function\n- **perlin2(x, y)**: 2D Perlin noise function\n- **perlin3(x, y, z)**: 3D Perlin noise function\n- **seed(val)**: Seed the noise functions. Only 65536 different seeds are supported. Use a float between 0 and 1 or an integer from 1 to 65536.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xixixao/noisejs.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.1.0"
}
